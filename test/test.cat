class Point {
    var x : int = 0;
    var y : int = 0;
    init(self, x: int, y: int)->int {
        self.x = x;
        self.y = y;
        return 0;
    }
    ff(self, x: int)->int {
        print("Point.ff(%d)\n", x);
        return 5;
    }
    f(self, x: int)->int {
        print("Point.f(%d)\n", x);
        return 5;
    }
}

    class Point3D < Point {
    var z : int = 0;
    init(self, x: int, y: int, z: int)->int {
        // super.init(x, y);
        self.x = x;
        self.y = y;
        self.z = z;
        return 0;
    }
    f(self, x: int)->int {
        print("Point3D.f(%d)\n", x);
        return 5;
    }
}

class Transformer {
    var factor : int = 0;
    init(self, factor: int)->Transformer {
        self.factor = factor;
        return self;
    }
    __call__(self, x: int)->int {
        return x * self.factor;
    }
}

var t : Transformer = Transformer(5);
print("t(10) = %d\n", t(10));

//def check(p:Point) -> int {
//    p.f(1);
//    return 0;
//}

//var p1: Point = Point(10, 20);
//var p2: Point3D = Point3D(10, 20, 30);

// p.x = 1;
//p1.f(2);
//p1.ff(2);

//p2.f(3);
//p2.ff(4);
//print("p1.x = %d\n", p1.x);
//print("p2.x = %d\n", p2.x);
//print("p2.z = %d\n", p2.z);
//check(p1);
//check(p2);
//print("%d\n", (1+2)*3);
//print("%d\n", -1+2*3);
//print("%d\n", !(1>0));

//var a:int=1;
//var b:str="str";
//var c:bool=true;
//print("%d\n", a);
//print("%s\n", b);
//print("%d\n", c);

var f:list<str> = ["a", "b", "c"];
var g:str = f[1];
print("%s\n", g);

def add(x:int, y:int)->int{
    return x+y;
}

var aaa:int = add(1,2);